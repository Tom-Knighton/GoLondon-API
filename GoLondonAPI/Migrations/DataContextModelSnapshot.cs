// <auto-generated />
using GoLondonAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoLondonAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("APIKey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserUUID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserUUID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CallsPerMin")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.User", b =>
                {
                    b.Property<string>("UserUUID")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserUUID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.UserRole", b =>
                {
                    b.Property<string>("UserUUID")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserUUID", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserUUID")
                        .IsUnique();

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.Project", b =>
                {
                    b.HasOne("GoLondonAPI.Domain.Entities.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("GoLondonAPI.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoLondonAPI.Domain.Entities.User", "User")
                        .WithOne("Role")
                        .HasForeignKey("GoLondonAPI.Domain.Entities.UserRole", "UserUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GoLondonAPI.Domain.Entities.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Role")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
