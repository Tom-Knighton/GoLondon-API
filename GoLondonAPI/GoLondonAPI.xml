<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GoLondonAPI</name>
    </assembly>
    <members>
        <member name="M:GoLondonAPI.Controllers.JourneyController.GetJourneys(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{GoLondonAPI.Domain.Enums.JourneyDateType})">
            <summary>
            Returns a list of possible journeys that can be made from one Point to another
            </summary>
            <param name="from">Where to depart, can be stop point id, ICS id or coordinates as 'lat,long'</param>
            <param name="to">Where to arrive, can be stop point id, ICS id or coordinates as 'lat,long'</param>
            <param name="via">Optional: travel through point on the journey. Can be stop point id, ICS id or coordinates as 'lat,long'</param>
            <param name="time">Optional: A desired time to either arrive or depart at</param>
            <param name="timeType">Optional: Whethere the 'time' parameter is the arrive or depart time. Defaults to depart</param>
            <returns></returns>
        </member>
        <member name="M:GoLondonAPI.Controllers.LineController.GetDisruptionsForMode(GoLondonAPI.Domain.Enums.LineMode)">
            <summary>
            Returns a list of disruptions affecting the specified line mode
            </summary>
            <param name="mode">The line mode to search for disruptions on</param>
        </member>
        <member name="M:GoLondonAPI.Controllers.LineController.GetLineStatus(System.String[],System.Boolean)">
            <summary>
            Gets the statuses for all lines provided
            </summary>
            <param name="lineIds">A comma separated list of line ids</param>
            <param name="includeDetail">Whether to include details on the disruptions causing any delays or not</param>
        </member>
        <member name="M:GoLondonAPI.Controllers.LineController.GetModeStatuses(GoLondonAPI.Domain.Enums.LineMode[],System.Boolean)">
            <summary>
            Gets the statuses for all lines on the line modes provided
            </summary>
            <param name="lineModes">The line modes, comma separated, to get the statuses for</param>
            <param name="includeDetail">Whether to include details on the disruptions causing any delays or not</param>
        </member>
        <member name="M:GoLondonAPI.Controllers.LineController.GetGeneralStatus(GoLondonAPI.Domain.Enums.LineMode[])">
            <summary>
            Gets the general status string description for a group of LineModes
            </summary>
            <remarks>This returns a set string from the <c>LineModeGroupStatusType</c> enum</remarks>
            <param name="lineModes">The general status of the line modes selected</param>
        </member>
        <member name="M:GoLondonAPI.Controllers.LineController.GetRouteLinesFor(System.String[],System.Boolean)">
            <summary>
            Returns a series of routes served by the passed lines, this includes branch ids and a list of stop points on each route
            </summary>
            <param name="lineIdentifiers">The identifiers of each line, i.e. bakerloo, elizabeth. (not tube, bus etc.)</param>
            <param name="fixCoordinates">Whether or not to fix coordinates in routes returned. If true, and multiple lines are passed, lines that pass
            through the same stop point will feature the same coordinate for that stop point, rather than their true coordinate (i.e. stratford DLR coord vs stratford central coord)</param>
        </member>
        <member name="M:GoLondonAPI.Controllers.MetaController.GetLineModes">
            <summary>
            Returns the possible line modes, used for/in several Line endpoints and data
            </summary>
        </member>
        <member name="M:GoLondonAPI.Controllers.MetaController.GetAllLineIds(GoLondonAPI.Domain.Enums.LineMode[])">
            <summary>
            Gets a list of LineIds for a specified mode
            </summary>
        </member>
        <member name="M:GoLondonAPI.Controllers.MetaController.GetDisruptionTypes">
            <summary>
            Returns the possible Delay Types
            </summary>
        </member>
        <member name="M:GoLondonAPI.Controllers.MetaController.GetLastCachedRouteTime">
            <summary>
            Gets the last modified time for the cached line routes
            </summary>
            <returns></returns>
        </member>
        <member name="M:GoLondonAPI.Controllers.MetaController.GetAccessibility">
            <summary>
            Returns data cached from TfL Irad, in a slimmed down format
            </summary>
            <returns>A list of StopPointAccessibility objects, containing an overall accessibility rating and information for relevant lines</returns>
        </member>
        <member name="M:GoLondonAPI.Controllers.MetaController.GetLastCachedAccessibilityTime">
            <summary>
            Gets the last modified time for the cached irad accessibility data
            </summary>
            <returns></returns>
        </member>
        <member name="M:GoLondonAPI.Controllers.SearchController.SearchStopPointsAround(System.Single,System.Single,System.Collections.Generic.List{GoLondonAPI.Domain.Enums.LineMode},System.Single,System.Boolean)">
            <summary>
            Returns a list of StopPoints around a specified location
            </summary>
            <param name="lat">The latitiude of the coordinate to search around</param>
            <param name="lon">The longitutde of the coordinate to search around</param>
            <param name="modesToFilterBy">Filter by a list of line modes, can be null for no filter</param>
            <param name="radius">The radius around the center to search, in metres, defaults to 200</param>
            <param name="useHierarchy">Whether or not to reorganise StopPoints into a heirarchy</param>
            <remarks>The TFL api appears to have trouble returning results with a radius above 1000</remarks>
        </member>
        <member name="M:GoLondonAPI.Controllers.SearchController.SearchStopPointsByName(System.String,System.Collections.Generic.List{GoLondonAPI.Domain.Enums.LineMode},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a list of StopPoints (and optionally, points of interest) filtered by their (partial) common name 
            </summary>
            <param name="query">The query to search for</param>
            <param name="modesToFilterBy">Filter by a list of line modes, can be null for no filter</param>
            <param name="includePOI">Whether or not to include points of interest, defaults to false</param>
            <param name="includeAddresses">Whether or not to include addresses and postcodes, defaults to false</param>
            <param name="useHierarchy">Whether or not to reorganise StopPoints into a heirarchy</param>
        </member>
        <member name="M:GoLondonAPI.Controllers.StopPointController.GetStopPointyId(System.String[])">
            <summary>
            Returns detailed StopPoint information for all valid stop point ids, separated by commas
            </summary>
            <param name="ids">The ids (from StopPoint.id) of each stop point, comma separated</param>
            <returns>Array of StopPoint models</returns>
        </member>
        <member name="M:GoLondonAPI.Controllers.StopPointController.GetEstimatedArrivals(System.String)">
            <summary>
            Returns all estimated arrivals for a specified StopPoint. Arrivals returned sorted by line, then platform and direction.
            </summary>
            <remarks>
            <para>
            All arrivals are returned sorted by the soonest to arrive. 
            </para>
            <para>
            If the stop point is a HUB, the method will return arrivals for each valid child
            </para>
            </remarks>
            <param name="stopId">The id of the stop point</param>
            <returns></returns>
        </member>
        <member name="M:GoLondonAPI.Controllers.VehicleController.GetVehicleArrivals(System.String)">
            <summary>
            Returns an ordered list of StopPointArrivals for a specified vehicle
            </summary>
            <param name="vehicleId">The id of the vehicle, i.e. the license plate of a bus</param>
        </member>
        <member name="M:GoLondonAPI.Data.Global.UpdateCachedLineRoutes(System.Collections.Generic.ICollection{GoLondonAPI.Domain.Models.LineRoutes})">
            <summary>
            Updates the cached line routes and the last cached time
            </summary>
            <param name="routes">The routes to be set in the cache. This collection will overwrite any currently stored routes</param>
        </member>
        <member name="M:GoLondonAPI.Data.Global.AddLineRouteToCache(GoLondonAPI.Domain.Models.LineRoutes)">
            <summary>
            Adds a line route to the cache. This will not overwrite the current cache, simply add a new line routes
            </summary>
            <param name="route">The line w/ routes to add. This method will silently fail if the line already exists in cache</param>
        </member>
        <member name="M:GoLondonAPI.Data.Global.UpdateIradCache(System.Collections.Generic.ICollection{GoLondonAPI.Domain.Models.StopPointAccessibility})">
            <summary>
            Updates the cached IRAD accessibility data and the last cache time
            </summary>
            <param name="withData">The data to be set in cache. This will overwrite any currently stored IRAD cache</param>
        </member>
        <member name="M:GoLondonAPI.Domain.Enums.LineModeExtensions.GetFromString(System.String)">
            <summary>
            Returns the LineMode value, if any, associated with the Value string
            </summary>
            <param name="value">The Value string from the LineMode enum</param>
        </member>
    </members>
</doc>
